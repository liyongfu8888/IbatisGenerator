package com.tomcat.model;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class TbHongbaoLogExample {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table tb_hongbao_log
     *
     * @ibatorgenerated Fri Dec 09 14:23:08 CST 2016
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table tb_hongbao_log
     *
     * @ibatorgenerated Fri Dec 09 14:23:08 CST 2016
     */
    protected List oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tb_hongbao_log
     *
     * @ibatorgenerated Fri Dec 09 14:23:08 CST 2016
     */
    public TbHongbaoLogExample() {
        oredCriteria = new ArrayList();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tb_hongbao_log
     *
     * @ibatorgenerated Fri Dec 09 14:23:08 CST 2016
     */
    protected TbHongbaoLogExample(TbHongbaoLogExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tb_hongbao_log
     *
     * @ibatorgenerated Fri Dec 09 14:23:08 CST 2016
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tb_hongbao_log
     *
     * @ibatorgenerated Fri Dec 09 14:23:08 CST 2016
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tb_hongbao_log
     *
     * @ibatorgenerated Fri Dec 09 14:23:08 CST 2016
     */
    public List getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tb_hongbao_log
     *
     * @ibatorgenerated Fri Dec 09 14:23:08 CST 2016
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tb_hongbao_log
     *
     * @ibatorgenerated Fri Dec 09 14:23:08 CST 2016
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tb_hongbao_log
     *
     * @ibatorgenerated Fri Dec 09 14:23:08 CST 2016
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tb_hongbao_log
     *
     * @ibatorgenerated Fri Dec 09 14:23:08 CST 2016
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table tb_hongbao_log
     *
     * @ibatorgenerated Fri Dec 09 14:23:08 CST 2016
     */
    public static class Criteria {
        protected List criteriaWithoutValue;

        protected List criteriaWithSingleValue;

        protected List criteriaWithListValue;

        protected List criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList();
            criteriaWithSingleValue = new ArrayList();
            criteriaWithListValue = new ArrayList();
            criteriaWithBetweenValue = new ArrayList();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List list = new ArrayList();
            list.add(value1);
            list.add(value2);
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return this;
        }

        public Criteria andIdIn(List values) {
            addCriterion("id in", values, "id");
            return this;
        }

        public Criteria andIdNotIn(List values) {
            addCriterion("id not in", values, "id");
            return this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return this;
        }

        public Criteria andUserIdIsNull() {
            addCriterion("user_id is null");
            return this;
        }

        public Criteria andUserIdIsNotNull() {
            addCriterion("user_id is not null");
            return this;
        }

        public Criteria andUserIdEqualTo(Integer value) {
            addCriterion("user_id =", value, "userId");
            return this;
        }

        public Criteria andUserIdNotEqualTo(Integer value) {
            addCriterion("user_id <>", value, "userId");
            return this;
        }

        public Criteria andUserIdGreaterThan(Integer value) {
            addCriterion("user_id >", value, "userId");
            return this;
        }

        public Criteria andUserIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("user_id >=", value, "userId");
            return this;
        }

        public Criteria andUserIdLessThan(Integer value) {
            addCriterion("user_id <", value, "userId");
            return this;
        }

        public Criteria andUserIdLessThanOrEqualTo(Integer value) {
            addCriterion("user_id <=", value, "userId");
            return this;
        }

        public Criteria andUserIdIn(List values) {
            addCriterion("user_id in", values, "userId");
            return this;
        }

        public Criteria andUserIdNotIn(List values) {
            addCriterion("user_id not in", values, "userId");
            return this;
        }

        public Criteria andUserIdBetween(Integer value1, Integer value2) {
            addCriterion("user_id between", value1, value2, "userId");
            return this;
        }

        public Criteria andUserIdNotBetween(Integer value1, Integer value2) {
            addCriterion("user_id not between", value1, value2, "userId");
            return this;
        }

        public Criteria andMoneyIsNull() {
            addCriterion("money is null");
            return this;
        }

        public Criteria andMoneyIsNotNull() {
            addCriterion("money is not null");
            return this;
        }

        public Criteria andMoneyEqualTo(BigDecimal value) {
            addCriterion("money =", value, "money");
            return this;
        }

        public Criteria andMoneyNotEqualTo(BigDecimal value) {
            addCriterion("money <>", value, "money");
            return this;
        }

        public Criteria andMoneyGreaterThan(BigDecimal value) {
            addCriterion("money >", value, "money");
            return this;
        }

        public Criteria andMoneyGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("money >=", value, "money");
            return this;
        }

        public Criteria andMoneyLessThan(BigDecimal value) {
            addCriterion("money <", value, "money");
            return this;
        }

        public Criteria andMoneyLessThanOrEqualTo(BigDecimal value) {
            addCriterion("money <=", value, "money");
            return this;
        }

        public Criteria andMoneyIn(List values) {
            addCriterion("money in", values, "money");
            return this;
        }

        public Criteria andMoneyNotIn(List values) {
            addCriterion("money not in", values, "money");
            return this;
        }

        public Criteria andMoneyBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("money between", value1, value2, "money");
            return this;
        }

        public Criteria andMoneyNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("money not between", value1, value2, "money");
            return this;
        }

        public Criteria andStatusIsNull() {
            addCriterion("status is null");
            return this;
        }

        public Criteria andStatusIsNotNull() {
            addCriterion("status is not null");
            return this;
        }

        public Criteria andStatusEqualTo(Integer value) {
            addCriterion("status =", value, "status");
            return this;
        }

        public Criteria andStatusNotEqualTo(Integer value) {
            addCriterion("status <>", value, "status");
            return this;
        }

        public Criteria andStatusGreaterThan(Integer value) {
            addCriterion("status >", value, "status");
            return this;
        }

        public Criteria andStatusGreaterThanOrEqualTo(Integer value) {
            addCriterion("status >=", value, "status");
            return this;
        }

        public Criteria andStatusLessThan(Integer value) {
            addCriterion("status <", value, "status");
            return this;
        }

        public Criteria andStatusLessThanOrEqualTo(Integer value) {
            addCriterion("status <=", value, "status");
            return this;
        }

        public Criteria andStatusIn(List values) {
            addCriterion("status in", values, "status");
            return this;
        }

        public Criteria andStatusNotIn(List values) {
            addCriterion("status not in", values, "status");
            return this;
        }

        public Criteria andStatusBetween(Integer value1, Integer value2) {
            addCriterion("status between", value1, value2, "status");
            return this;
        }

        public Criteria andStatusNotBetween(Integer value1, Integer value2) {
            addCriterion("status not between", value1, value2, "status");
            return this;
        }

        public Criteria andHtypeIsNull() {
            addCriterion("htype is null");
            return this;
        }

        public Criteria andHtypeIsNotNull() {
            addCriterion("htype is not null");
            return this;
        }

        public Criteria andHtypeEqualTo(Integer value) {
            addCriterion("htype =", value, "htype");
            return this;
        }

        public Criteria andHtypeNotEqualTo(Integer value) {
            addCriterion("htype <>", value, "htype");
            return this;
        }

        public Criteria andHtypeGreaterThan(Integer value) {
            addCriterion("htype >", value, "htype");
            return this;
        }

        public Criteria andHtypeGreaterThanOrEqualTo(Integer value) {
            addCriterion("htype >=", value, "htype");
            return this;
        }

        public Criteria andHtypeLessThan(Integer value) {
            addCriterion("htype <", value, "htype");
            return this;
        }

        public Criteria andHtypeLessThanOrEqualTo(Integer value) {
            addCriterion("htype <=", value, "htype");
            return this;
        }

        public Criteria andHtypeIn(List values) {
            addCriterion("htype in", values, "htype");
            return this;
        }

        public Criteria andHtypeNotIn(List values) {
            addCriterion("htype not in", values, "htype");
            return this;
        }

        public Criteria andHtypeBetween(Integer value1, Integer value2) {
            addCriterion("htype between", value1, value2, "htype");
            return this;
        }

        public Criteria andHtypeNotBetween(Integer value1, Integer value2) {
            addCriterion("htype not between", value1, value2, "htype");
            return this;
        }

        public Criteria andExpiredDaysIsNull() {
            addCriterion("expired_days is null");
            return this;
        }

        public Criteria andExpiredDaysIsNotNull() {
            addCriterion("expired_days is not null");
            return this;
        }

        public Criteria andExpiredDaysEqualTo(Integer value) {
            addCriterion("expired_days =", value, "expiredDays");
            return this;
        }

        public Criteria andExpiredDaysNotEqualTo(Integer value) {
            addCriterion("expired_days <>", value, "expiredDays");
            return this;
        }

        public Criteria andExpiredDaysGreaterThan(Integer value) {
            addCriterion("expired_days >", value, "expiredDays");
            return this;
        }

        public Criteria andExpiredDaysGreaterThanOrEqualTo(Integer value) {
            addCriterion("expired_days >=", value, "expiredDays");
            return this;
        }

        public Criteria andExpiredDaysLessThan(Integer value) {
            addCriterion("expired_days <", value, "expiredDays");
            return this;
        }

        public Criteria andExpiredDaysLessThanOrEqualTo(Integer value) {
            addCriterion("expired_days <=", value, "expiredDays");
            return this;
        }

        public Criteria andExpiredDaysIn(List values) {
            addCriterion("expired_days in", values, "expiredDays");
            return this;
        }

        public Criteria andExpiredDaysNotIn(List values) {
            addCriterion("expired_days not in", values, "expiredDays");
            return this;
        }

        public Criteria andExpiredDaysBetween(Integer value1, Integer value2) {
            addCriterion("expired_days between", value1, value2, "expiredDays");
            return this;
        }

        public Criteria andExpiredDaysNotBetween(Integer value1, Integer value2) {
            addCriterion("expired_days not between", value1, value2, "expiredDays");
            return this;
        }

        public Criteria andCreatedAtIsNull() {
            addCriterion("created_At is null");
            return this;
        }

        public Criteria andCreatedAtIsNotNull() {
            addCriterion("created_At is not null");
            return this;
        }

        public Criteria andCreatedAtEqualTo(Integer value) {
            addCriterion("created_At =", value, "createdAt");
            return this;
        }

        public Criteria andCreatedAtNotEqualTo(Integer value) {
            addCriterion("created_At <>", value, "createdAt");
            return this;
        }

        public Criteria andCreatedAtGreaterThan(Integer value) {
            addCriterion("created_At >", value, "createdAt");
            return this;
        }

        public Criteria andCreatedAtGreaterThanOrEqualTo(Integer value) {
            addCriterion("created_At >=", value, "createdAt");
            return this;
        }

        public Criteria andCreatedAtLessThan(Integer value) {
            addCriterion("created_At <", value, "createdAt");
            return this;
        }

        public Criteria andCreatedAtLessThanOrEqualTo(Integer value) {
            addCriterion("created_At <=", value, "createdAt");
            return this;
        }

        public Criteria andCreatedAtIn(List values) {
            addCriterion("created_At in", values, "createdAt");
            return this;
        }

        public Criteria andCreatedAtNotIn(List values) {
            addCriterion("created_At not in", values, "createdAt");
            return this;
        }

        public Criteria andCreatedAtBetween(Integer value1, Integer value2) {
            addCriterion("created_At between", value1, value2, "createdAt");
            return this;
        }

        public Criteria andCreatedAtNotBetween(Integer value1, Integer value2) {
            addCriterion("created_At not between", value1, value2, "createdAt");
            return this;
        }

        public Criteria andCreatedByIsNull() {
            addCriterion("created_By is null");
            return this;
        }

        public Criteria andCreatedByIsNotNull() {
            addCriterion("created_By is not null");
            return this;
        }

        public Criteria andCreatedByEqualTo(Integer value) {
            addCriterion("created_By =", value, "createdBy");
            return this;
        }

        public Criteria andCreatedByNotEqualTo(Integer value) {
            addCriterion("created_By <>", value, "createdBy");
            return this;
        }

        public Criteria andCreatedByGreaterThan(Integer value) {
            addCriterion("created_By >", value, "createdBy");
            return this;
        }

        public Criteria andCreatedByGreaterThanOrEqualTo(Integer value) {
            addCriterion("created_By >=", value, "createdBy");
            return this;
        }

        public Criteria andCreatedByLessThan(Integer value) {
            addCriterion("created_By <", value, "createdBy");
            return this;
        }

        public Criteria andCreatedByLessThanOrEqualTo(Integer value) {
            addCriterion("created_By <=", value, "createdBy");
            return this;
        }

        public Criteria andCreatedByIn(List values) {
            addCriterion("created_By in", values, "createdBy");
            return this;
        }

        public Criteria andCreatedByNotIn(List values) {
            addCriterion("created_By not in", values, "createdBy");
            return this;
        }

        public Criteria andCreatedByBetween(Integer value1, Integer value2) {
            addCriterion("created_By between", value1, value2, "createdBy");
            return this;
        }

        public Criteria andCreatedByNotBetween(Integer value1, Integer value2) {
            addCriterion("created_By not between", value1, value2, "createdBy");
            return this;
        }

        public Criteria andUpdateAtIsNull() {
            addCriterion("update_At is null");
            return this;
        }

        public Criteria andUpdateAtIsNotNull() {
            addCriterion("update_At is not null");
            return this;
        }

        public Criteria andUpdateAtEqualTo(Integer value) {
            addCriterion("update_At =", value, "updateAt");
            return this;
        }

        public Criteria andUpdateAtNotEqualTo(Integer value) {
            addCriterion("update_At <>", value, "updateAt");
            return this;
        }

        public Criteria andUpdateAtGreaterThan(Integer value) {
            addCriterion("update_At >", value, "updateAt");
            return this;
        }

        public Criteria andUpdateAtGreaterThanOrEqualTo(Integer value) {
            addCriterion("update_At >=", value, "updateAt");
            return this;
        }

        public Criteria andUpdateAtLessThan(Integer value) {
            addCriterion("update_At <", value, "updateAt");
            return this;
        }

        public Criteria andUpdateAtLessThanOrEqualTo(Integer value) {
            addCriterion("update_At <=", value, "updateAt");
            return this;
        }

        public Criteria andUpdateAtIn(List values) {
            addCriterion("update_At in", values, "updateAt");
            return this;
        }

        public Criteria andUpdateAtNotIn(List values) {
            addCriterion("update_At not in", values, "updateAt");
            return this;
        }

        public Criteria andUpdateAtBetween(Integer value1, Integer value2) {
            addCriterion("update_At between", value1, value2, "updateAt");
            return this;
        }

        public Criteria andUpdateAtNotBetween(Integer value1, Integer value2) {
            addCriterion("update_At not between", value1, value2, "updateAt");
            return this;
        }

        public Criteria andUpdateByIsNull() {
            addCriterion("update_By is null");
            return this;
        }

        public Criteria andUpdateByIsNotNull() {
            addCriterion("update_By is not null");
            return this;
        }

        public Criteria andUpdateByEqualTo(Integer value) {
            addCriterion("update_By =", value, "updateBy");
            return this;
        }

        public Criteria andUpdateByNotEqualTo(Integer value) {
            addCriterion("update_By <>", value, "updateBy");
            return this;
        }

        public Criteria andUpdateByGreaterThan(Integer value) {
            addCriterion("update_By >", value, "updateBy");
            return this;
        }

        public Criteria andUpdateByGreaterThanOrEqualTo(Integer value) {
            addCriterion("update_By >=", value, "updateBy");
            return this;
        }

        public Criteria andUpdateByLessThan(Integer value) {
            addCriterion("update_By <", value, "updateBy");
            return this;
        }

        public Criteria andUpdateByLessThanOrEqualTo(Integer value) {
            addCriterion("update_By <=", value, "updateBy");
            return this;
        }

        public Criteria andUpdateByIn(List values) {
            addCriterion("update_By in", values, "updateBy");
            return this;
        }

        public Criteria andUpdateByNotIn(List values) {
            addCriterion("update_By not in", values, "updateBy");
            return this;
        }

        public Criteria andUpdateByBetween(Integer value1, Integer value2) {
            addCriterion("update_By between", value1, value2, "updateBy");
            return this;
        }

        public Criteria andUpdateByNotBetween(Integer value1, Integer value2) {
            addCriterion("update_By not between", value1, value2, "updateBy");
            return this;
        }
    }
}