package com.tomcat.model;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class TbLinksExample {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table tb_links
     *
     * @ibatorgenerated Fri Dec 09 14:23:08 CST 2016
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table tb_links
     *
     * @ibatorgenerated Fri Dec 09 14:23:08 CST 2016
     */
    protected List oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tb_links
     *
     * @ibatorgenerated Fri Dec 09 14:23:08 CST 2016
     */
    public TbLinksExample() {
        oredCriteria = new ArrayList();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tb_links
     *
     * @ibatorgenerated Fri Dec 09 14:23:08 CST 2016
     */
    protected TbLinksExample(TbLinksExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tb_links
     *
     * @ibatorgenerated Fri Dec 09 14:23:08 CST 2016
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tb_links
     *
     * @ibatorgenerated Fri Dec 09 14:23:08 CST 2016
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tb_links
     *
     * @ibatorgenerated Fri Dec 09 14:23:08 CST 2016
     */
    public List getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tb_links
     *
     * @ibatorgenerated Fri Dec 09 14:23:08 CST 2016
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tb_links
     *
     * @ibatorgenerated Fri Dec 09 14:23:08 CST 2016
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tb_links
     *
     * @ibatorgenerated Fri Dec 09 14:23:08 CST 2016
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tb_links
     *
     * @ibatorgenerated Fri Dec 09 14:23:08 CST 2016
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table tb_links
     *
     * @ibatorgenerated Fri Dec 09 14:23:08 CST 2016
     */
    public static class Criteria {
        protected List criteriaWithoutValue;

        protected List criteriaWithSingleValue;

        protected List criteriaWithListValue;

        protected List criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList();
            criteriaWithSingleValue = new ArrayList();
            criteriaWithListValue = new ArrayList();
            criteriaWithBetweenValue = new ArrayList();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List list = new ArrayList();
            list.add(value1);
            list.add(value2);
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return this;
        }

        public Criteria andIdIn(List values) {
            addCriterion("id in", values, "id");
            return this;
        }

        public Criteria andIdNotIn(List values) {
            addCriterion("id not in", values, "id");
            return this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return this;
        }

        public Criteria andHrefnameIsNull() {
            addCriterion("hrefname is null");
            return this;
        }

        public Criteria andHrefnameIsNotNull() {
            addCriterion("hrefname is not null");
            return this;
        }

        public Criteria andHrefnameEqualTo(String value) {
            addCriterion("hrefname =", value, "hrefname");
            return this;
        }

        public Criteria andHrefnameNotEqualTo(String value) {
            addCriterion("hrefname <>", value, "hrefname");
            return this;
        }

        public Criteria andHrefnameGreaterThan(String value) {
            addCriterion("hrefname >", value, "hrefname");
            return this;
        }

        public Criteria andHrefnameGreaterThanOrEqualTo(String value) {
            addCriterion("hrefname >=", value, "hrefname");
            return this;
        }

        public Criteria andHrefnameLessThan(String value) {
            addCriterion("hrefname <", value, "hrefname");
            return this;
        }

        public Criteria andHrefnameLessThanOrEqualTo(String value) {
            addCriterion("hrefname <=", value, "hrefname");
            return this;
        }

        public Criteria andHrefnameLike(String value) {
            addCriterion("hrefname like", value, "hrefname");
            return this;
        }

        public Criteria andHrefnameNotLike(String value) {
            addCriterion("hrefname not like", value, "hrefname");
            return this;
        }

        public Criteria andHrefnameIn(List values) {
            addCriterion("hrefname in", values, "hrefname");
            return this;
        }

        public Criteria andHrefnameNotIn(List values) {
            addCriterion("hrefname not in", values, "hrefname");
            return this;
        }

        public Criteria andHrefnameBetween(String value1, String value2) {
            addCriterion("hrefname between", value1, value2, "hrefname");
            return this;
        }

        public Criteria andHrefnameNotBetween(String value1, String value2) {
            addCriterion("hrefname not between", value1, value2, "hrefname");
            return this;
        }

        public Criteria andHrefurlIsNull() {
            addCriterion("hrefurl is null");
            return this;
        }

        public Criteria andHrefurlIsNotNull() {
            addCriterion("hrefurl is not null");
            return this;
        }

        public Criteria andHrefurlEqualTo(String value) {
            addCriterion("hrefurl =", value, "hrefurl");
            return this;
        }

        public Criteria andHrefurlNotEqualTo(String value) {
            addCriterion("hrefurl <>", value, "hrefurl");
            return this;
        }

        public Criteria andHrefurlGreaterThan(String value) {
            addCriterion("hrefurl >", value, "hrefurl");
            return this;
        }

        public Criteria andHrefurlGreaterThanOrEqualTo(String value) {
            addCriterion("hrefurl >=", value, "hrefurl");
            return this;
        }

        public Criteria andHrefurlLessThan(String value) {
            addCriterion("hrefurl <", value, "hrefurl");
            return this;
        }

        public Criteria andHrefurlLessThanOrEqualTo(String value) {
            addCriterion("hrefurl <=", value, "hrefurl");
            return this;
        }

        public Criteria andHrefurlLike(String value) {
            addCriterion("hrefurl like", value, "hrefurl");
            return this;
        }

        public Criteria andHrefurlNotLike(String value) {
            addCriterion("hrefurl not like", value, "hrefurl");
            return this;
        }

        public Criteria andHrefurlIn(List values) {
            addCriterion("hrefurl in", values, "hrefurl");
            return this;
        }

        public Criteria andHrefurlNotIn(List values) {
            addCriterion("hrefurl not in", values, "hrefurl");
            return this;
        }

        public Criteria andHrefurlBetween(String value1, String value2) {
            addCriterion("hrefurl between", value1, value2, "hrefurl");
            return this;
        }

        public Criteria andHrefurlNotBetween(String value1, String value2) {
            addCriterion("hrefurl not between", value1, value2, "hrefurl");
            return this;
        }

        public Criteria andAddtimeIsNull() {
            addCriterion("addtime is null");
            return this;
        }

        public Criteria andAddtimeIsNotNull() {
            addCriterion("addtime is not null");
            return this;
        }

        public Criteria andAddtimeEqualTo(String value) {
            addCriterion("addtime =", value, "addtime");
            return this;
        }

        public Criteria andAddtimeNotEqualTo(String value) {
            addCriterion("addtime <>", value, "addtime");
            return this;
        }

        public Criteria andAddtimeGreaterThan(String value) {
            addCriterion("addtime >", value, "addtime");
            return this;
        }

        public Criteria andAddtimeGreaterThanOrEqualTo(String value) {
            addCriterion("addtime >=", value, "addtime");
            return this;
        }

        public Criteria andAddtimeLessThan(String value) {
            addCriterion("addtime <", value, "addtime");
            return this;
        }

        public Criteria andAddtimeLessThanOrEqualTo(String value) {
            addCriterion("addtime <=", value, "addtime");
            return this;
        }

        public Criteria andAddtimeLike(String value) {
            addCriterion("addtime like", value, "addtime");
            return this;
        }

        public Criteria andAddtimeNotLike(String value) {
            addCriterion("addtime not like", value, "addtime");
            return this;
        }

        public Criteria andAddtimeIn(List values) {
            addCriterion("addtime in", values, "addtime");
            return this;
        }

        public Criteria andAddtimeNotIn(List values) {
            addCriterion("addtime not in", values, "addtime");
            return this;
        }

        public Criteria andAddtimeBetween(String value1, String value2) {
            addCriterion("addtime between", value1, value2, "addtime");
            return this;
        }

        public Criteria andAddtimeNotBetween(String value1, String value2) {
            addCriterion("addtime not between", value1, value2, "addtime");
            return this;
        }
    }
}